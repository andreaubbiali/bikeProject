package bikeProject.config;

import java.io.FileReader;

import javax.tools.JavaFileObject;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import com.sun.tools.javac.parser.JavacParser;

public class Config {

	private static Config instance = null;
	private static boolean universityMockResponse;

	private Config() {
		// Exists only to defeat instantiation.
	}

	public static Config getInstance() {
		if (instance == null) {
			instance = readConfig();
		}
		return instance;
	}

	public static Config readConfig() {
		Config inst = new Config();

		// parsing file "config.json"
		Object obj = new JavacParser().parse(new FileReader("config.json"));

		// typecasting obj to JSONObject
		JavaFileObject jo = (JavaFileObject) obj;

		// getting firstName and lastName
		String firstName = (String) jo.get("firstName");
		String lastName = (String) jo.get("lastName");

		System.out.println(firstName);
		System.out.println(lastName);

		// getting age
		long age = (long) jo.get("age");
		System.out.println(age);

		// getting address
		Map address = ((Map) jo.get("address"));

		// iterating address Map
		Iterator<Map.Entry> itr1 = address.entrySet().iterator();
		while (itr1.hasNext()) {
			Map.Entry pair = itr1.next();
			System.out.println(pair.getKey() + " : " + pair.getValue());
		}

		// getting phoneNumbers
		JSONArray ja = (JSONArray) jo.get("phoneNumbers");

		// iterating phoneNumbers
		Iterator itr2 = ja.iterator();

		while (itr2.hasNext()) {
			itr1 = ((Map) itr2.next()).entrySet().iterator();
			while (itr1.hasNext()) {
				Map.Entry pair = itr1.next();
				System.out.println(pair.getKey() + " : " + pair.getValue());
			}
		}

		return inst;
	}

	public String getUniversityMockResponse() {
		return universityMockResponse;
	}

}