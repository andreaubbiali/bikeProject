package bikeProject.config;

import java.io.FileReader;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class Config {

	private static Config instance = null;
	private static boolean universityMockResponse;

	private Config() {
		// Exists only to defeat instantiation.
	}

	public static Config getInstance() {
		if (instance == null) {

			System.out.println("PARTE ");
			instance = readConfig();
		}
		return instance;
	}

	public static Config readConfig() {
		Config inst = new Config();

		System.out.println("ARRIVA ");

		// parsing file "config.json"
		Object obj;
		try {
			obj = new JSONParser().parse(new FileReader("config.json"));
		} catch (Exception e) {
			e.printStackTrace();
			return inst;
		}

		// cast obj to jsonobject
		JSONObject jo = (JSONObject) obj;

		// getting variables
		boolean universityMockResponse = (boolean) jo.get("universityMockResponse");

		System.out.println(universityMockResponse);

//		// getting age
//		long age = (long) jo.get("age");
//		System.out.println(age);
//
//		// getting address
//		Map address = ((Map) jo.get("address"));
//
//		// iterating address Map
//		Iterator<Map.Entry> itr1 = address.entrySet().iterator();
//		while (itr1.hasNext()) {
//			Map.Entry pair = itr1.next();
//			System.out.println(pair.getKey() + " : " + pair.getValue());
//		}
//
//		// getting phoneNumbers
//		JSONArray ja = (JSONArray) jo.get("phoneNumbers");
//
//		// iterating phoneNumbers
//		Iterator itr2 = ja.iterator();
//
//		while (itr2.hasNext()) {
//			itr1 = ((Map) itr2.next()).entrySet().iterator();
//			while (itr1.hasNext()) {
//				Map.Entry pair = itr1.next();
//				System.out.println(pair.getKey() + " : " + pair.getValue());
//			}
//		}

		return inst;
	}

	public boolean getUniversityMockResponse() {
		return universityMockResponse;
	}

}